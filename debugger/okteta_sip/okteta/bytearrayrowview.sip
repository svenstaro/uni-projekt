// bytearrayrowview.sip generated by MetaSIP on Mon Oct  8 00:06:00 2012
//
// This file is part of the okteta Python extension module.
//
// Copyright (C) 2012 Shaheed Haque <srhaque@theiet.org>
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) version 3.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public License
// along with this library; see the file COPYING.LIB.  If not, write to
// the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
// Boston, MA 02110-1301, USA.


namespace Okteta
{
%TypeHeaderCode
#include <bytearrayrowview.h>
%End

    class ByteArrayRowView : Okteta::AbstractByteArrayView
    {
%TypeHeaderCode
#include <bytearrayrowview.h>
%End

    public:
        explicit ByteArrayRowView(QWidget *parent = 0);
        virtual ~ByteArrayRowView();
        virtual int byteSpacingWidth() const;
        virtual int noOfGroupedBytes() const;
        virtual int groupSpacingWidth() const;
        virtual int binaryGapWidth() const;
        virtual bool showsNonprinting() const;
        virtual QChar substituteChar() const;
        virtual QChar undefinedChar() const;
        virtual bool isByteTypeColored() const;
        virtual void setByteArrayModel(Okteta::AbstractByteArrayModel *byteArrayModel);
        virtual void setByteSpacingWidth(int byteSpacingWidth);
        virtual void setNoOfGroupedBytes(int noOfGroupedBytes);
        virtual void setGroupSpacingWidth(int groupSpacingWidth);
        virtual void setBinaryGapWidth(int binaryGapWidth);
        virtual void setBufferSpacing(int byteSpacingWidth, int noOfGroupedBytes = 0, int groupSpacingWidth = 0);
        virtual void setValueCoding(Okteta::AbstractByteArrayView::ValueCoding valueCoding);
        virtual void setShowsNonprinting(bool showsNonprinting = true);
        virtual void setSubstituteChar(QChar substituteChar);
        virtual void setUndefinedChar(QChar undefinedChar);
        virtual void setCharCoding(Okteta::AbstractByteArrayView::CharCoding charCoding);
        virtual void setCharCoding(const QString &charCodingName);
        virtual void setByteTypeColored(bool isColored);
        virtual void renderColumns(QPainter *painter, int cx, int cy, int cw, int ch);
        virtual QSize minimumSizeHint() const;

    protected:
        virtual void changeEvent(QEvent *event);
    };
};
