operands:
<R*>	register	4-bit
<Op2>	operand2	x-bit
	0 0* <Rs> 
	1 <2's complement immediate>
<S>	statusflag	1 bit


Alu:
00 <opcode> <S> <Rd> <Rs1> <Op2-17bit>
add	0000
adc	0001

mul	0010
div	0011

sub	0100
sbc	0101
rsb	0110
rsc	0111

and	1000
orr	1001
xor	1010
not	1011  *ignores Rs1

lsl	1100
asr	1101
lsr	1110
ror	1111

Jump:
<opcode> <Op2-25bit>
jmp	1110000
call	1110001
jeq	1100000
jne	1100001
jlt	1100100
jle	1100101
jgt	1100110
jge	1100111
jo	1101000
jno	1101001
jc	1101010
jnc	1101011

Mem:
<opcode> <R> <Op2-25bit>
ld	100
st	101

ADR:
<opcode> <R> <Op2-25bit>
adr	010

Swi:
<opcode> <Op2-25bit>
swi	0110010

Stack:
<opcode> 0* <R>
push	0110100
pop	0110101
